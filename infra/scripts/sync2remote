#!/usr/bin/env -S deno run --allow-run=bash,rsync --allow-read=.
// vim: ft=typescript

import { posix } from "https://deno.land/std@0.177.0/path/mod.ts";

if (Deno.args.length === 0) {
  console.error("No target server found");
  Deno.exit(1);
}

const remote = Deno.args[0];
const current_workspace = posix.normalize(Deno.cwd()).split(posix.sep);
const [pkgname, work_dir, repo] = current_workspace.slice(-3);

const sources = await Deno.run({
  cmd: [
    "bash",
    "-c",
    "source PKGBUILD && echo ${source[*]}",
  ],
  stdout: "piped",
}).output()
  .then((raw) => new TextDecoder().decode(raw).trim())
  .then((stdout) => stdout.split(" "));

const pending_sync_file = sources.filter((src) => {
  try {
    const stat = Deno.statSync(src);
    return stat.isFile;
  } catch (_) {
    return false;
  }
});
pending_sync_file.push("PKGBUILD");

const target_dir = `${remote}:~/rvpkg/${pkgname}/${work_dir}/${repo}`;
console.log(`${pending_sync_file.length} pending sync to ${target_dir}`);

const rsync_proc = await Deno.run({
  cmd: [
    "rsync",
    "-azvh",
    ...pending_sync_file,
    target_dir,
  ],
}).status();

Deno.exit(rsync_proc.code);
